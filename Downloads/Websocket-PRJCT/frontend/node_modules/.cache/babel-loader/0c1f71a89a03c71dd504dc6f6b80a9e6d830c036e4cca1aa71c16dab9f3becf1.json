{"ast":null,"code":"// src/services/api.js\n\n// Base URL for our backend API\nconst API_BASE_URL = 'http://localhost:8000/api';\n\n// Helper function to handle API responses\nconst handleResponse = async response => {\n  if (!response.ok) {\n    // Get error message from the response body\n    const errorData = await response.json().catch(() => ({}));\n    throw new Error(errorData.message || `API error: ${response.status}`);\n  }\n  return response.json();\n};\n\n// API service object\nconst apiService = {\n  // Exchange OAuth code for access token\n  exchangeCodeForToken: async code => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/oauth/token`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          code\n        })\n      });\n      return handleResponse(response);\n    } catch (error) {\n      console.error('Error exchanging code for token:', error);\n      throw error;\n    }\n  },\n  // Verify token is still valid\n  verifyToken: async token => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/verify-token`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.ok;\n    } catch (error) {\n      console.error('Error verifying token:', error);\n      return false;\n    }\n  },\n  // Get account information\n  getAccountInfo: async token => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/account-info`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return handleResponse(response);\n    } catch (error) {\n      console.error('Error fetching account info:', error);\n      throw error;\n    }\n  },\n  // Logout (revoke token)\n  logout: async token => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/logout`, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      return response.ok;\n    } catch (error) {\n      console.error('Error during logout:', error);\n      return false;\n    }\n  }\n};\nexport default apiService;","map":{"version":3,"names":["API_BASE_URL","handleResponse","response","ok","errorData","json","catch","Error","message","status","apiService","exchangeCodeForToken","code","fetch","method","headers","body","JSON","stringify","error","console","verifyToken","token","Authorization","getAccountInfo","logout"],"sources":["C:/Users/El Capitan/Downloads/Websocket-PRJCT/frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\r\n\r\n// Base URL for our backend API\r\nconst API_BASE_URL = 'http://localhost:8000/api';\r\n\r\n// Helper function to handle API responses\r\nconst handleResponse = async (response) => {\r\n  if (!response.ok) {\r\n    // Get error message from the response body\r\n    const errorData = await response.json().catch(() => ({}));\r\n    throw new Error(errorData.message || `API error: ${response.status}`);\r\n  }\r\n  return response.json();\r\n};\r\n\r\n// API service object\r\nconst apiService = {\r\n  // Exchange OAuth code for access token\r\n  exchangeCodeForToken: async (code) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/oauth/token`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ code }),\r\n      });\r\n      \r\n      return handleResponse(response);\r\n    } catch (error) {\r\n      console.error('Error exchanging code for token:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Verify token is still valid\r\n  verifyToken: async (token) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/verify-token`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      \r\n      return response.ok;\r\n    } catch (error) {\r\n      console.error('Error verifying token:', error);\r\n      return false;\r\n    }\r\n  },\r\n  \r\n  // Get account information\r\n  getAccountInfo: async (token) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/account-info`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      \r\n      return handleResponse(response);\r\n    } catch (error) {\r\n      console.error('Error fetching account info:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Logout (revoke token)\r\n  logout: async (token) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/logout`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      \r\n      return response.ok;\r\n    } catch (error) {\r\n      console.error('Error during logout:', error);\r\n      return false;\r\n    }\r\n  }\r\n};\r\n\r\nexport default apiService;"],"mappings":"AAAA;;AAEA;AACA,MAAMA,YAAY,GAAG,2BAA2B;;AAEhD;AACA,MAAMC,cAAc,GAAG,MAAOC,QAAQ,IAAK;EACzC,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;IAChB;IACA,MAAMC,SAAS,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACzD,MAAM,IAAIC,KAAK,CAACH,SAAS,CAACI,OAAO,IAAI,cAAcN,QAAQ,CAACO,MAAM,EAAE,CAAC;EACvE;EACA,OAAOP,QAAQ,CAACG,IAAI,CAAC,CAAC;AACxB,CAAC;;AAED;AACA,MAAMK,UAAU,GAAG;EACjB;EACAC,oBAAoB,EAAE,MAAOC,IAAI,IAAK;IACpC,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMW,KAAK,CAAC,GAAGb,YAAY,cAAc,EAAE;QAC1Dc,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEN;QAAK,CAAC;MAC/B,CAAC,CAAC;MAEF,OAAOX,cAAc,CAACC,QAAQ,CAAC;IACjC,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAE,WAAW,EAAE,MAAOC,KAAK,IAAK;IAC5B,IAAI;MACF,MAAMpB,QAAQ,GAAG,MAAMW,KAAK,CAAC,GAAGb,YAAY,eAAe,EAAE;QAC3De,OAAO,EAAE;UACPQ,aAAa,EAAE,UAAUD,KAAK;QAChC;MACF,CAAC,CAAC;MAEF,OAAOpB,QAAQ,CAACC,EAAE;IACpB,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAO,KAAK;IACd;EACF,CAAC;EAED;EACAK,cAAc,EAAE,MAAOF,KAAK,IAAK;IAC/B,IAAI;MACF,MAAMpB,QAAQ,GAAG,MAAMW,KAAK,CAAC,GAAGb,YAAY,eAAe,EAAE;QAC3De,OAAO,EAAE;UACPQ,aAAa,EAAE,UAAUD,KAAK;QAChC;MACF,CAAC,CAAC;MAEF,OAAOrB,cAAc,CAACC,QAAQ,CAAC;IACjC,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAM,MAAM,EAAE,MAAOH,KAAK,IAAK;IACvB,IAAI;MACF,MAAMpB,QAAQ,GAAG,MAAMW,KAAK,CAAC,GAAGb,YAAY,SAAS,EAAE;QACrDc,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACPQ,aAAa,EAAE,UAAUD,KAAK,EAAE;UAChC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,OAAOpB,QAAQ,CAACC,EAAE;IACpB,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,OAAO,KAAK;IACd;EACF;AACF,CAAC;AAED,eAAeT,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}