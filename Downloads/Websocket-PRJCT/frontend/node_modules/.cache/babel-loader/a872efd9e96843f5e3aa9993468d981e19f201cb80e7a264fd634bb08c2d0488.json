{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\El Capitan\\\\Downloads\\\\Websocket-PRJCT\\\\frontend\\\\src\\\\components\\\\LoginButton.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginButton = ({\n  onLoginSuccess\n}) => {\n  // Tradovate OAuth configuration from the screenshots\n  const clientId = '5922'; // From the second screenshot\n  const redirectUri = 'http://localhost:000/callback';\n\n  // Function to initiate OAuth flow\n  const handleLogin = () => {\n    // Store a random state value to verify the callback\n    const state = Math.random().toString(36).substring(2, 15);\n    localStorage.setItem('oauth_state', state);\n\n    // Build the OAuth URL\n    const authUrl = `https://trader.tradovate.com/oauth?` + `response_type=code&` + `client_id=${clientId}&` + `redirect_uri=${encodeURIComponent(redirectUri)}&` + `state=${state}`;\n\n    // Open the OAuth authorization page in a popup window\n    const width = 600;\n    const height = 700;\n    const left = window.screenX + (window.outerWidth - width) / 2;\n    const top = window.screenY + (window.outerHeight - height) / 2;\n    const popup = window.open(authUrl, 'tradovate-oauth', `width=${width},height=${height},left=${left},top=${top}`);\n\n    // Poll for redirect to our callback URL\n    const pollTimer = window.setInterval(() => {\n      try {\n        // Check if we got redirected to our callback URL\n        if (popup.location.href.includes(redirectUri)) {\n          window.clearInterval(pollTimer);\n\n          // Parse the URL to extract the authorization code\n          const url = new URL(popup.location.href);\n          const code = url.searchParams.get('code');\n          const returnedState = url.searchParams.get('state');\n\n          // Verify the state parameter\n          if (returnedState !== localStorage.getItem('oauth_state')) {\n            console.error('OAuth state mismatch');\n            popup.close();\n            return;\n          }\n\n          // Exchange the code for an access token via our backend\n          fetch('http://localhost:8000/api/oauth/token', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              code\n            })\n          }).then(response => response.json()).then(data => {\n            if (data.access_token) {\n              onLoginSuccess(data.access_token);\n            }\n          }).catch(error => {\n            console.error('Error exchanging code for token:', error);\n          });\n          popup.close();\n        }\n      } catch (e) {\n        // Usually a cross-origin error which is expected when navigating away\n        // This does not stop the polling\n      }\n    }, 500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleLogin,\n    children: \"Connect to Tradovate\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_c = LoginButton;\nexport default LoginButton;\nvar _c;\n$RefreshReg$(_c, \"LoginButton\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LoginButton","onLoginSuccess","clientId","redirectUri","handleLogin","state","Math","random","toString","substring","localStorage","setItem","authUrl","encodeURIComponent","width","height","left","window","screenX","outerWidth","top","screenY","outerHeight","popup","open","pollTimer","setInterval","location","href","includes","clearInterval","url","URL","code","searchParams","get","returnedState","getItem","console","error","close","fetch","method","headers","body","JSON","stringify","then","response","json","data","access_token","catch","e","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/El Capitan/Downloads/Websocket-PRJCT/frontend/src/components/LoginButton.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst LoginButton = ({ onLoginSuccess }) => {\r\n  // Tradovate OAuth configuration from the screenshots\r\n  const clientId = '5922'; // From the second screenshot\r\n  const redirectUri = 'http://localhost:000/callback';\r\n  \r\n  // Function to initiate OAuth flow\r\n  const handleLogin = () => {\r\n    // Store a random state value to verify the callback\r\n    const state = Math.random().toString(36).substring(2, 15);\r\n    localStorage.setItem('oauth_state', state);\r\n    \r\n    // Build the OAuth URL\r\n    const authUrl = `https://trader.tradovate.com/oauth?` +\r\n      `response_type=code&` +\r\n      `client_id=${clientId}&` +\r\n      `redirect_uri=${encodeURIComponent(redirectUri)}&` +\r\n      `state=${state}`;\r\n    \r\n    // Open the OAuth authorization page in a popup window\r\n    const width = 600;\r\n    const height = 700;\r\n    const left = window.screenX + (window.outerWidth - width) / 2;\r\n    const top = window.screenY + (window.outerHeight - height) / 2;\r\n    \r\n    const popup = window.open(\r\n      authUrl, \r\n      'tradovate-oauth',\r\n      `width=${width},height=${height},left=${left},top=${top}`\r\n    );\r\n    \r\n    // Poll for redirect to our callback URL\r\n    const pollTimer = window.setInterval(() => {\r\n      try {\r\n        // Check if we got redirected to our callback URL\r\n        if (popup.location.href.includes(redirectUri)) {\r\n          window.clearInterval(pollTimer);\r\n          \r\n          // Parse the URL to extract the authorization code\r\n          const url = new URL(popup.location.href);\r\n          const code = url.searchParams.get('code');\r\n          const returnedState = url.searchParams.get('state');\r\n          \r\n          // Verify the state parameter\r\n          if (returnedState !== localStorage.getItem('oauth_state')) {\r\n            console.error('OAuth state mismatch');\r\n            popup.close();\r\n            return;\r\n          }\r\n          \r\n          // Exchange the code for an access token via our backend\r\n          fetch('http://localhost:8000/api/oauth/token', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ code }),\r\n          })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            if (data.access_token) {\r\n              onLoginSuccess(data.access_token);\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('Error exchanging code for token:', error);\r\n          });\r\n          \r\n          popup.close();\r\n        }\r\n      } catch (e) {\r\n        // Usually a cross-origin error which is expected when navigating away\r\n        // This does not stop the polling\r\n      }\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <button onClick={handleLogin}>\r\n      Connect to Tradovate\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LoginButton;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}